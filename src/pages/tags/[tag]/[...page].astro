---
import { getCollection } from "astro:content";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import PostCardGrid from "../../../components/PostCardGrid.astro";
import PaginationButton from "../../../components/PaginationButton.astro";
import type { GetStaticPathsOptions } from "astro";
import { getTagInfo } from "../../../utils/tag-info";

export const postsPerPage = 10;

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts = await getCollection("posts");

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat())
  ];

  return uniqueTags.flatMap((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );
    const descPosts = filteredPosts.sort(
      (a, b) =>
        new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
    );

    return paginate(descPosts, {
      pageSize: postsPerPage,
      params: { tag: tag.toLowerCase() }
    });
  });
}

const { tag } = Astro.params;
const { page } = Astro.props;
const tagInfo = getTagInfo(tag);
---

<BaseLayout
  title=`${tagInfo.label}`
  description=`${tagInfo.label}タグが関連付けられた投稿の一覧ページです。`
>
  <div class="mb-10 flex items-center gap-4">
    <tagInfo.icon class="h-24 w-24" />
    <h1 class="text-4xl font-semibold">{tagInfo.label}</h1>
  </div>
  <PostCardGrid posts={page.data} />
  <div class="my-8">
    <PaginationButton prevUrl={page.url.prev} nextUrl={page.url.next} />
  </div>
</BaseLayout>
